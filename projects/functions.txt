// ðŸ”˜ðŸ”˜ Main function to get all the data inside projects
// Getting information for a file 
statsObj = fs.statSync("./projects/guu.txt"); 
console.log(statsObj);Â  
console.log("Path is file:", statsObj.isFile()); 
console.log("Path is directory:", statsObj.isDirectory()); 

// Getting information for a directory 
statsObj = fs.statSync("./projects"); 
console.log(statsObj); 
console.log("Path is file:", statsObj.isFile()); 
console.log("Path is directory:", statsObj.isDirectory());

// Read directory.
const testFolder = './projects/';
fs.readdir(testFolder, (err, files) => {
  files.forEach(file => {
    console.log(file);
  });
});
// â­•â­•

app.get('/', (req, res) => {});

Here's a list of some of the most common fs module methods:

fs.readFile(path[, options], callback)
Asynchronously reads the entire contents of a file.

fs.writeFile(file, data[, options], callback)
Asynchronously writes data to a file, replacing the file if it already exists.

fs.stat(path, callback)
Asynchronously returns an fs.Stats object representing the status of the file or directory.

fs.mkdir(path[, options], callback)
Asynchronously creates a directory.

fs.readdir(path, callback)
Asynchronously reads the contents of a directory.

fs.rename(oldPath, newPath, callback)
Asynchronously renames a file or directory.

fs.unlink(path, callback)
Asynchronously deletes a file.

fs.rmdir(path, callback)
Asynchronously removes a directory.

fs.copyFile(src, dest[, flags], callback)
Asynchronously copies src to dest.